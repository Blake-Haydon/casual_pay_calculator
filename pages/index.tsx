import React, { useState, useEffect } from 'react'
import Head from 'next/head'
import Form from 'react-bootstrap/Form'
import InputGroup from 'react-bootstrap/InputGroup'
import Col from 'react-bootstrap/Col'
import Container from 'react-bootstrap/Container'

export default function Home() {
  // Rates of pay state variables
  const [ordinaryRate, setOrdinaryRate] = useState("0");
  const [saturdayRate, setSaturdayRate] = useState("0");
  const [sundayRate, setSundayRate] = useState("0");
  const [publicHolidayRate, setPublicHolidayRate] = useState("0");

  // Number of hours worked state variables
  const [ordinaryHours, setOrdinaryHours] = useState("0");
  const [saturdayHours, setSaturdayHours] = useState("0");
  const [sundayHours, setSundayHours] = useState("0");
  const [publicHolidayHours, setPublicHolidayHours] = useState("0");

  // State variable to store the total pay
  const [totalPay, setTotalPay] = useState(0);

  const safeSet = (setFunction: any, value: string | null) => {
    // If the value is valid set it as the new value else ignore the input and don't change state
    if (value !== null && parseFloat(value) !== NaN && parseFloat(value) >= 0) {
      setFunction(value)
    }
    else if (value == "") {
      setFunction("")
    }
  }

  const parseFloatNoNaN = (value: string): number => {
    if (value == "") {
      return 0
    }
    return parseFloat(value)
  }

  useEffect(() => {
    setTotalPay(
      parseFloatNoNaN(ordinaryRate) * parseFloatNoNaN(ordinaryHours)
      + parseFloatNoNaN(saturdayRate) * parseFloatNoNaN(saturdayHours)
      + parseFloatNoNaN(sundayRate) * parseFloatNoNaN(sundayHours)
      + parseFloatNoNaN(publicHolidayRate) * parseFloatNoNaN(publicHolidayHours)
    )
    // Update the total cost only if the hours or rates change
  }, [ordinaryRate, ordinaryHours, saturdayRate, saturdayHours, sundayRate, sundayHours, publicHolidayRate, publicHolidayHours])

  useEffect(() => {
    let urlParams = new URLSearchParams(window.location.search);

    // Update the state with the query string on load
    urlParams.get("ordinaryRate") !== null && safeSet(setOrdinaryRate, urlParams.get("ordinaryRate"));
    urlParams.get("saturdayRate") !== null && safeSet(setSaturdayRate, urlParams.get("saturdayRate"));
    urlParams.get("sundayRate") !== null && safeSet(setSundayRate, urlParams.get("sundayRate"));
    urlParams.get("publicHolidayRate") !== null && safeSet(setPublicHolidayRate, urlParams.get("publicHolidayRate"));
  }, [])

  return (
    <div>
      <Head>
        <title>Casual Pay Calculator</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <Container >
          <h1 className="my-3" style={{ textAlign: "center" }}>Casual Pay Calculator</h1>

          {/* Ordinary Rate */}
          <Form>
            <Form.Row>
              <Form.Group as={Col} md="6">
                <Form.Label>Ordinary Rate</Form.Label>
                <InputGroup>
                  <InputGroup.Prepend>
                    <InputGroup.Text>$</InputGroup.Text>
                  </InputGroup.Prepend>
                  <Form.Control value={ordinaryRate} type="number" onChange={event => safeSet(setOrdinaryRate, event.target.value)} />
                </InputGroup>
              </Form.Group>
              <Form.Group as={Col} md="6">
                <Form.Label>Hours Worked</Form.Label>
                <Form.Control value={ordinaryHours} type="number" onChange={event => safeSet(setOrdinaryHours, event.target.value)} />
              </Form.Group>
            </Form.Row>

            {/* Saturday Rate */}
            <Form.Row>
              <Form.Group as={Col} md="6">
                <Form.Label>Saturday Rate</Form.Label>
                <InputGroup>
                  <InputGroup.Prepend>
                    <InputGroup.Text>$</InputGroup.Text>
                  </InputGroup.Prepend>
                  <Form.Control value={saturdayRate} type="number" onChange={event => safeSet(setSaturdayRate, event.target.value)} />
                </InputGroup>
              </Form.Group>
              <Form.Group as={Col} md="6">
                <Form.Label>Hours Worked</Form.Label>
                <Form.Control value={saturdayHours} type="number" onChange={event => safeSet(setSaturdayHours, event.target.value)} />
              </Form.Group>
            </Form.Row>

            {/* Sunday Rate */}
            <Form.Row>
              <Form.Group as={Col} md="6">
                <Form.Label>Sunday Rate</Form.Label>
                <InputGroup>
                  <InputGroup.Prepend>
                    <InputGroup.Text>$</InputGroup.Text>
                  </InputGroup.Prepend>
                  <Form.Control value={sundayRate} type="number" onChange={event => safeSet(setSundayRate, event.target.value)} />
                </InputGroup>
              </Form.Group>
              <Form.Group as={Col} md="6">
                <Form.Label>Hours Worked</Form.Label>
                <Form.Control value={sundayHours} type="number" onChange={event => safeSet(setSundayHours, event.target.value)} />
              </Form.Group>
            </Form.Row>

            {/* Public Holiday Rate */}
            <Form.Row>
              <Form.Group as={Col} md="6">
                <Form.Label>Holiday Rate</Form.Label>
                <InputGroup>
                  <InputGroup.Prepend>
                    <InputGroup.Text>$</InputGroup.Text>
                  </InputGroup.Prepend>
                  <Form.Control value={publicHolidayRate} type="number" onChange={event => safeSet(setPublicHolidayRate, event.target.value)} />
                </InputGroup>
              </Form.Group>
              <Form.Group as={Col} md="6">
                <Form.Label>Hours Worked</Form.Label>
                <Form.Control value={publicHolidayHours} type="number" onChange={event => safeSet(setPublicHolidayHours, event.target.value)} />
              </Form.Group>
            </Form.Row>

          </Form>

          <h2 style={{ textAlign: "right" }}>Total Pay: ${totalPay.toFixed(2)}</h2>

        </Container>
      </main>

      {/* TODO: ADD FOOTER */}
    </div >
  )
}
